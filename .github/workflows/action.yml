name: Deploy

on:
  push:
    branches:
      - develop
      - main
      
  pull_request:
    branches:
      - develop

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up SSH directory
        run: |
          mkdir -p ~/.ssh
          touch ~/.ssh/known_hosts

      - name: Install NVM, Node, and Yarn
        run: |
          # Install NVM
          curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.1/install.sh | bash
          # Source NVM to make it available in this shell
          export NVM_DIR="$HOME/.nvm"
          [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"
          # Install the specific version of Node.js (same as on your server)
          nvm install v20.9.0
          # Install Yarn globally
          npm install -g yarn
          # Verify that Yarn is available
          yarn --version

      - name: Add Server to Known Hosts
        run: ssh-keyscan -H kitech.rw >> ~/.ssh/known_hosts

      - name: Deploy to Server
        env:
          SSH_PRIVATE_KEY: ${{ secrets.YEAN_WEB_SECRET }}
        run: |
          # Save the private key for SSH authentication
          echo "$SSH_PRIVATE_KEY" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          
          # SSH into the server and make sure to source NVM before running any commands
            ssh -o StrictHostKeyChecking=no -p 22 root@46.101.129.106 << 'EOF'

            # Ensure NVM is sourced
            export NVM_DIR="$HOME/.nvm"
            [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"
            
            # Verify that nvm and yarn are available
            nvm --version
            yarn --version

            # Check the current branch and select the appropriate script 
            BRANCH_NAME="$(git symbolic-ref --short HEAD)"
            if [ "$BRANCH_NAME" == "main" ]; then SCRIPT_PATH="/scripts/build.sh"
            else SCRIPT_PATH="/scripts/builddev.sh"
            fi
            # Run the script and pass the branch name as an argument 
            bash "$SCRIPT_PATH" "$BRANCH_NAME"
          EOF
